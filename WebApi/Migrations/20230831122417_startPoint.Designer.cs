// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.EFCore;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230831122417_startPoint")]
    partial class startPoint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CustomerStatus")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = "01234567890",
                            CustomerName = "Elif",
                            CustomerPassword = "1234",
                            CustomerStatus = true,
                            CustomerSurname = "Aydoğan"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = "12345678987",
                            CustomerName = "Doğan",
                            CustomerPassword = "12345",
                            CustomerStatus = true,
                            CustomerSurname = "Cüceloğlu"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = "98765432101",
                            CustomerName = "Zülfü",
                            CustomerPassword = "123456",
                            CustomerStatus = true,
                            CustomerSurname = "Livaneli"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
